[{"C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\index.js":"1","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\App.js":"2","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Store\\index.js":"3","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Layout\\DummyScreen.js":"4","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Pages\\Login.js":"5","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Pages\\Expenses.js":"6","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Layout\\Navbar.js":"7","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Layout\\ProfileDetails.js":"8","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Pages\\ForgetPasswordPage.js":"9"},{"size":380,"mtime":1678794460081,"results":"10","hashOfConfig":"11"},{"size":1377,"mtime":1678794460061,"results":"12","hashOfConfig":"11"},{"size":1278,"mtime":1678794460172,"results":"13","hashOfConfig":"11"},{"size":1653,"mtime":1678794460097,"results":"14","hashOfConfig":"11"},{"size":7505,"mtime":1679026853745,"results":"15","hashOfConfig":"11"},{"size":8473,"mtime":1678794460128,"results":"16","hashOfConfig":"11"},{"size":3103,"mtime":1678794460108,"results":"17","hashOfConfig":"11"},{"size":6045,"mtime":1679027006894,"results":"18","hashOfConfig":"11"},{"size":1971,"mtime":1679026866407,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"7qu4oz",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\index.js",[],[],[],"C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\App.js",["52","53"],[],"import { Fragment, useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport DummyScreen from './Components/Layout/DummyScreen';\nimport Navbar from './Components/Layout/Navbar'\nimport ProfileDetails from './Components/Layout/ProfileDetails';\nimport Expenses from './Components/Pages/Expenses';\nimport ForgetPasswordPage from './Components/Pages/ForgetPasswordPage';\nimport Login from './Components/Pages/Login';\nimport { counterActions } from './Components/Store';\nfunction App() {\n  const token = useSelector(state => state.authentication.token);\n  const isLoggedIn = useSelector(state => state.authentication.isLoggedIn);\n  \n  // let ctx = useContext(expContext);\n  return (\n    <Fragment>\n      <Navbar />\n      <Switch>\n        <Route exact path='/'>\n          <Login />\n        </Route>\n        <Route exact path='/forget'>\n          <ForgetPasswordPage />\n        </Route>\n        <Route exact path='/profile'>\n          {token && <DummyScreen />}\n          {!token && <Redirect to='/' />}\n        </Route>\n        <Route exact path='/details'>\n          <ProfileDetails />\n        </Route>\n        <Route exact path='/expenses'>\n          {isLoggedIn && <Expenses />}\n          {!isLoggedIn && <Redirect to='/' />}\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n}\n\nexport default App;","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Store\\index.js",[],[],"C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Layout\\DummyScreen.js",["54"],[],"import React, { useContext } from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\n// import { expContext } from '../Store/ExpenseContext'\nconst DummyScreen = () => {\n  const token = useSelector(state => state.authentication.token);\n  const handleVerify = async (e) => {\n    e.preventDefault();\n    try {\n      let responce = await fetch(\n        'https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyAVT99-GK2zBUOt69gM4rlulJJmZmwYgOU',\n        {\n          method: 'POST',\n          body: JSON.stringify({\n            \"requestType\": \"VERIFY_EMAIL\",\n            \"idToken\": token\n          }),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n  \n      if (responce.ok) {\n        let data = await responce.json();\n        console.log(\"Authantication Token:\", data);\n        alert(\"Please verify your account link has been sent to your mail\")\n      } else {\n        let errorMessage = 'Sending Verify Link failed!';\n        alert(errorMessage);\n        throw new Error(\"Something went wrong\");\n      }\n    } catch (error) {\n      console.log(error)\n    }\n   \n  }\n  return (\n    <div className='my-2  mx-2 row'>\n      <h1 className=\"fst-italic col-md-8\" >\n        Welcome to expanse tracker!!!\n      </h1>\n      <span className='fst-italic bg-warning col-md-4 my-2'>Your profie is incomplete<Link className='text-primary' to=\"/details\">Complete now</Link></span>\n      <hr />\n      <div>\n        <button className=\"btn btn-primary w-25\" onClick={handleVerify}>Veify Your E-mail</button>\n      </div>\n    </div>\n  )\n}\n\nexport default DummyScreen\n","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Pages\\Login.js",[],[],"C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Pages\\Expenses.js",["55","56","57"],[],"import React, { useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { expenseActions } from '../Store';\n\n\n\nconst Expenses = () => {\n    const expenses=useSelector(state=>state.expense.expenses);\n    const dispatch=useDispatch();\n    const handleDelete = async (expense) => {\n        console.log(expense)\n        try {\n            let responce = await fetch(\n                `https://react-expense-tracker-34c17-default-rtdb.firebaseio.com/expenses/${expense.Name}.json`,\n                {\n                    method: 'DELETE',\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            )\n            if (responce.ok) {\n                // alert(\"Deleted successfully\")\n                const newExpenses = expenses.filter((item) => {\n                    return item.Name !== expense.Name\n                })\n                // ctx.setExpenses(newExpenses);\n                dispatch(expenseActions.setExpenses(newExpenses))\n            } else {\n                throw new Error(\"Failed to delete expense\")\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n    const handleEdit = async (expense) => {\n        console.log(expense);\n        const editedExpense = {\n            expenseAmount: enteredaAmount.current.value,\n            expenseDesc: enteredaDesc.current.value,\n            expenseCatagory: enteredaCatagory.current.value\n        }\n        try {\n            let responce = await fetch(\n                `https://react-expense-tracker-34c17-default-rtdb.firebaseio.com/expenses/${expense.Name}.json`,\n                {\n                    method: 'PUT',\n                    body: JSON.stringify(editedExpense),\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                }\n            )\n            if (responce.ok) {\n                alert(\"Edited successfully\");\n                let data=await responce.json();\n                console.log(data);\n\n            } else {\n                throw new Error(\"Failed to Edit expense\")\n            }\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n    // const ctx = useContext(expContext);\n    useEffect(async () => {\n            try {\n                let responce = await fetch(\n                    'https://react-expense-tracker-34c17-default-rtdb.firebaseio.com/expenses.json',\n                    {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    }\n                )\n                if (responce.ok) {\n                    let data = await responce.json();\n                    let finaldata = [];\n                    for (const key in data) {\n                        finaldata.push({ Name: key, ...data[key] })\n                    }\n                    dispatch(expenseActions.setExpenses(finaldata))\n                } else {\n                    throw new Error(\"Failed to load previous expense\")\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        return ()=>{}\n    }, [])\n\n\n    const enteredaAmount = useRef();\n    const enteredaDesc = useRef();\n    const enteredaCatagory = useRef();\n    const handleSubmitExpense = async (e) => {\n        e.preventDefault();\n        const newAddedExpense = {\n            expenseAmount: enteredaAmount.current.value,\n            expenseDesc: enteredaDesc.current.value,\n            expenseCatagory: enteredaCatagory.current.value\n        }\n\n        if (enteredaAmount.current.value.length > 0 && enteredaDesc.current.value.length > 0 && enteredaCatagory.current.value.length > 0) {\n           \n            try {\n                let responce = await fetch(\n                    'https://react-expense-tracker-34c17-default-rtdb.firebaseio.com/expenses.json',\n                    {\n                        method: 'POST',\n                        body: JSON.stringify(newAddedExpense),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                    }\n                )\n                if (responce.ok) {\n                    let data = await responce.json();\n                    // console.log(\"Added Item\",data);\n                    alert(\"added expanse successfully\");\n                    let addedItem = { Name: data.name, ...newAddedExpense }\n                    console.log(addedItem)\n                    // console.log(\"Added Item\",{Name:data.name,...newAddedExpense})\n                    // ctx.setExpenses([...expenses, addedItem])\n                    dispatch(expenseActions.setExpenses([...expenses,addedItem]))\n                } else {\n                    throw new Error(\"Failed to add expense\")\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            alert(\"please fill all the data\")\n        }\n    }\n    return (\n        <div className='container'>\n            <div className=\"row gx-3 gy-2 align-items-center mx-5 my-5\">\n                <h1>Enter your expense</h1>\n                <form className=\"row gy-2 gx-3 align-items-center\">\n                    <div className=\"col-auto\">\n                        <label className=\"visually-hidden\" htmlFor=\"expenseamount\">expenseamount:</label>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-text\">Choose expenseamount:</div>\n                            <input type=\"text\" className=\"form-control\" ref={enteredaAmount} id=\"expenseamount\" />\n                        </div>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"visually-hidden\" htmlFor=\"description\">description:</label>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-text\">Choose description:</div>\n                            <input type=\"text\" className=\"form-control\" ref={enteredaDesc} id=\"description\" />\n                        </div>\n                    </div>\n                    <div className=\"col-auto\">\n                        <label className=\"visually-hidden\" htmlFor=\"catagory\">description:</label>\n                        <div className=\"input-group\">\n                            <select className=\"form-select\" ref={enteredaCatagory} id=\"catagory\">\n                                <option value=\"choose a catagory\">Choose a catagory</option>\n                                <option value=\"movie\">movie</option>\n                                <option value=\"food\">food</option>\n                                <option value=\"electricity\">electricity</option>\n                                <option value=\"fuel\">fuel</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col-auto\">\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type=\"submit\" className=\"btn btn-primary\" id=\"onSubmit\" onClick={handleSubmitExpense}>Submit</button>\n                    </div>\n                </form>\n            </div>\n            {expenses.length > 0 && <h1 className='text-center'>Expenses</h1>}\n            <div className='row text-center '>{expenses.map((expense) => {\n                return <div key={Math.random()} className=\"card w-25 col-3\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">Amount:<span className='text-primary'>{expense.expenseAmount}    </span></h5>\n                        <h5 className=\"card-title\">Description:<span className='text-primary'>{expense.expenseDesc} </span></h5>\n                        <h5 className=\"card-title\">Catagory:<span className='text-primary'>{expense.expenseCatagory}</span> </h5>\n                        <span>\n                            <button className='btn btn-danger mx-1 my-1' onClick={() => handleDelete(expense)}>DELETE</button>\n                            <button className='btn btn-secondary mx-1 my-1' onClick={() => handleEdit(expense)}>EDIT</button>\n                        </span>\n                    </div>\n                </div>\n            })}</div>\n        </div>\n    )\n}\n\nexport default Expenses\n\n","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Layout\\Navbar.js",["58"],[],"import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom';\n// import { expContext } from '../Store/ExpenseContext';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { authActions } from '../Store';\nconst Navbar = () => {\n    const history = useHistory();\n    // const ctx = useContext(expContext);\n\n    const isLoggedIn=useSelector(state=>state.authentication.isLoggedIn)\n    let dispatch=useDispatch();\n    const handleLogout = (e) => {\n        e.preventDefault();\n        localStorage.removeItem(\"token\")\n        // ctx.setLogin(false);\n        dispatch(authActions.loginFalse())\n        // ctx.setIsLoggedIn(false);\n        dispatch(authActions.setIsloggedIn(false))\n        // ctx.setToken(null);\n        dispatch(authActions.setToken(null))\n        history.push('/')\n        // ctx.profileInfo({ myName: \"\", myUrl: \"\" });\n        dispatch(authActions.setProfileInfo({ myName: \"\", myUrl: \"\" }))\n    }\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <div className=\"container-fluid\">\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active text-primary\" aria-current=\"page\" to=\"/\">\n                                    MyWebLink\n                                </Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" exact to=\"/\">Home</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" exact to=\"/expenses\">Expenses</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" exact to=\"/profile\">Profile</Link>\n                            </li>\n                            <li className=\"nav-item\">\n                                <Link className=\"nav-link active\" aria-current=\"page\" exact to=\"/\">About Us</Link>\n                            </li>\n                        </ul>\n                        {isLoggedIn && <form className=\"form-inline my-2 my-lg-0\">\n                            <button className='btn btn-primary' onClick={handleLogout}>Logout</button>\n                        </form>}\n                    </div>\n                </div>\n            </nav>\n        </div>\n    )\n}\n\nexport default Navbar\n","C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Layout\\ProfileDetails.js",[],[],"C:\\Users\\chaha\\Downloads\\Task 14. Lets Optimize and Do it the right way\\src\\Components\\Pages\\ForgetPasswordPage.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":1,"column":20,"nodeType":"61","messageId":"62","endLine":1,"endColumn":30},{"ruleId":"59","severity":1,"message":"63","line":10,"column":10,"nodeType":"61","messageId":"62","endLine":10,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":27},{"ruleId":"59","severity":1,"message":"64","line":1,"column":36,"nodeType":"61","messageId":"62","endLine":1,"endColumn":44},{"ruleId":"65","severity":1,"message":"66","line":69,"column":15,"nodeType":"67","endLine":94,"endColumn":6},{"ruleId":"65","severity":1,"message":"68","line":94,"column":8,"nodeType":"69","endLine":94,"endColumn":10,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":27},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'counterActions' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["71"],{"desc":"72","fix":"73"},"Update the dependencies array to be: [dispatch]",{"range":"74","text":"75"},[3281,3283],"[dispatch]"]